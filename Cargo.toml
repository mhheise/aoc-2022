[package]
name = "aoc"
version = "0.1.0"
description = "Advent of Code 2022"
license = "MIT"
authors = ["Matt Heise <mhheise@pm.me>"]
categories = ["algorithms", "data-structures", "parsing"]
keywords = ["advent-of-code", "aoc"]
repository = "https://github.com/mhheise/aoc-2022"
edition = "2021"
default-run = "aoc"
publish = false

# See more keys and their definitions at
# https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = "1"
indoc = "2"
itertools = "0.10"
parse-display = "0.8"
pathfinding = "4"
pretty_assertions = "1"
rustc-hash = "1"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
tabled = "0.13"
test-case = "3"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

[lints.rust]
# Detects items missing documentation
# https://doc.rust-lang.org/rustdoc/lints.html#missing_docs
missing_docs = "deny"
# Detects usage of `unsafe` code (and other potentially unsound constructs)
# https://doc.rust-lang.org/rustc/lints/listing/allowed-by-default.html#unsafe-code
unsafe_code = "forbid"

[lints.clippy]
# Set to priority -1 to allow overriding individual lint rules
all = { level = "deny", priority = -1 }
cargo = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }

# Checks for casts between numerical types that may truncate large values
# https://rust-lang.github.io/rust-clippy/master/index.html#cast%20possible%20truncation
cast_possible_truncation = "allow"
# Checks for casts from an unsigned type to a signed type of the same size
# https://rust-lang.github.io/rust-clippy/master/index.html#cast%20possible%20wrap
cast_possible_wrap = "allow"
# Checks for casts from any numerical to a float type where the receiving type cannot store
# all values from the original type without rounding errors
# https://rust-lang.github.io/rust-clippy/master/index.html#cast%20precision%20loss
cast_precision_loss = "allow"
# Checks for casts from signed to unsigned types
# https://rust-lang.github.io/rust-clippy/master/index.html#cast%20sign%20loss
cast_sign_loss = "allow"
# Detects type names that are prefixed or suffixed by the containing moduleâ€™s name.
# https://rust-lang.github.io/rust-clippy/master/index.html#module%20name%20repetitions
module_name_repetitions = "allow"
# Checks to see if multiple versions of a crate are being used
# (The `proc-macro-error` crate uses an outdated version of `syn`)
# https://rust-lang.github.io/rust-clippy/master/index.html#/multiple%20crate%20versions
multiple_crate_versions = "allow"
# Checks for private functions that only return `Some` or `None`
# (The `[`solve!`]` macro expects `Option`s)
# https://rust-lang.github.io/rust-clippy/master/index.html#/unnecessary%20wraps
unnecessary_wraps = "allow"
