# This is a configuration file for the bacon tool
#
# Bacon repository: https://github.com/Canop/bacon
# Complete help on configuration: https://dystroy.org/bacon/config/
# You can also check bacon's own bacon.toml file
# as an example: https://github.com/Canop/bacon/blob/main/bacon.toml

default_job = "check"

[jobs.check]
command = ["cargo", "check", "--color", "always"]
need_stdout = false

[jobs.check-all]
command = ["cargo", "check", "--all-targets", "--color", "always"]
need_stdout = false

[jobs.clippy]
command = [
    "cargo", "clippy",
    "--all-targets",
    "--color", "always",
]
need_stdout = false

[jobs.bench]
command = [
    "cargo", "bench", "--color", "always",
    "--", "--color", "always", # see https://github.com/Canop/bacon/issues/124
]
need_stdout = true

[jobs.test]
command = [
    "cargo", "test", "--color", "always",
    "--", "--color", "always", # see https://github.com/Canop/bacon/issues/124
]
need_stdout = true

[jobs.nextest]
command = [
    "cargo", "nextest", "run",
    "--color", "always",
    "--failure-output", "final",
    "--hide-progress-bar"
]
need_stdout = true

[jobs.doc]
command = ["cargo", "doc", "--color", "always", "--no-deps"]
need_stdout = false

# If the doc compiles, then it opens in your browser and bacon switches
# to the previous job
[jobs.doc-open]
command = ["cargo", "doc", "--color", "always", "--no-deps", "--open"]
need_stdout = false
on_success = "back" # so that we don't open the browser at each change

# You can run your application and have the result displayed in bacon,
# *if* it makes sense for this crate. You can run an example the same
# way. Don't forget the `--color always` part or the errors won't be
# properly parsed.
[jobs.run]
command = [
    "cargo", "run",
    "--color", "always",
    # put launch parameters for your program behind a `--` separator
]
need_stdout = true
allow_warnings = true

[jobs.01]
command = [
    "cargo", "run",
    "--bin", "01",
    "--color", "always",
    "--quiet",
]
need_stdout = true
allow_warnings = true

[jobs.02]
command = [
    "cargo", "run",
    "--bin", "02",
    "--color", "always",
    "--quiet",
]
need_stdout = true
allow_warnings = true

[jobs.03]
command = [
    "cargo", "run",
    "--bin", "03",
    "--color", "always",
    "--quiet",
]
need_stdout = true
allow_warnings = true

[jobs.04]
command = [
    "cargo", "run",
    "--bin", "04",
    "--color", "always",
    "--quiet",
]
need_stdout = true
allow_warnings = true

[jobs.05]
command = [
    "cargo", "run",
    "--bin", "05",
    "--color", "always",
    "--quiet",
]
need_stdout = true
allow_warnings = true

[jobs.06]
command = [
    "cargo", "run",
    "--bin", "06",
    "--color", "always",
    "--quiet",
]
need_stdout = true
allow_warnings = true

[jobs.07]
command = [
    "cargo", "run",
    "--bin", "07",
    "--color", "always",
    "--quiet",
]
need_stdout = true
allow_warnings = true

[jobs.08]
command = [
    "cargo", "run",
    "--bin", "08",
    "--color", "always",
    "--quiet",
]
need_stdout = true
allow_warnings = true

[jobs.09]
command = [
    "cargo", "run",
    "--bin", "09",
    "--color", "always",
    "--quiet",
]
need_stdout = true
allow_warnings = true

[jobs.10]
command = [
    "cargo", "run",
    "--bin", "10",
    "--color", "always",
    "--quiet",
]
need_stdout = true
allow_warnings = true

[jobs.11]
command = [
    "cargo", "run",
    "--bin", "11",
    "--color", "always",
    "--quiet",
]
need_stdout = true
allow_warnings = true

[jobs.12]
command = [
    "cargo", "run",
    "--bin", "12",
    "--color", "always",
    "--quiet",
]
need_stdout = true
allow_warnings = true

[jobs.13]
command = [
    "cargo", "run",
    "--bin", "13",
    "--color", "always",
    "--quiet",
]
need_stdout = true
allow_warnings = true

# You may define here keybindings that would be specific to
# a project, for example a shortcut to launch a specific job.
# Shortcuts to internal functions (scrolling, toggling, etc.)
# should go in your personal global prefs.toml file instead.
[keybindings]
p = "job:bench"
n = "job:nextest"
